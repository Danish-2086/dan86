# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Tue Jul 30 13:30:07 2024
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))